SET(TARGET_OBJECT_SUFFIX sqlite3)

IF (SQLITE3_INCLUDE_DIR)
  # Already in cache, be silent
  SET(SQLITE3_FIND_QUIETLY TRUE)
ENDIF (SQLITE3_INCLUDE_DIR)

FIND_PATH(SQLITE3_INCLUDE_DIR sqlite3.h
  /usr/include
  /usr/local/include
  
)

SET(SQLITE3_NAMES ${TARGET_OBJECT_SUFFIX})
FIND_LIBRARY(SQLITE3_LIBRARY
  NAMES ${SQLITE3_NAMES}
  PATHS /usr/lib/ /usr/local/lib/ /usr/lib/x86_64-linux-gnu/
  PATH_SUFFIXES ${TARGET_OBJECT_SUFFIX}
)

IF (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY)
  SET(SQLITE3_FOUND TRUE)
  SET(SQLITE3_LIBRARIES ${SQLITE3_LIBRARY} )
ELSE (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY)
  SET(SQLITE3_FOUND FALSE)
  SET(SQLITE3_LIBRARIES )
ENDIF (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY)

IF (SQLITE3_FOUND)
  IF (NOT SQLITE3_FIND_QUIETLY)
    MESSAGE(STATUS "Found ${TARGET_OBJECT_SUFFIX}: ${SQLITE3_LIBRARY}")
  ENDIF (NOT SQLITE3_FIND_QUIETLY)
ELSE (SQLITE3_FOUND)
  IF (SQLITE3_FIND_REQUIRED)
    MESSAGE(STATUS "Looked for ${TARGET_OBJECT_SUFFIX} libraries named ${SQLITE3_NAMES}.")
    MESSAGE(FATAL_ERROR "Could NOT find ${TARGET_OBJECT_SUFFIX} library")
  ENDIF (SQLITE3_FIND_REQUIRED)
ENDIF (SQLITE3_FOUND)

MARK_AS_ADVANCED(
  SQLITE3_LIBRARY
  SQLITE3_INCLUDE_DIR
  )
