SET(TARGET_OBJECT_SUFFIX pq)
SET(TARGET_INCLUDE_SUFFIX libpq-fe.h)

IF (POSTGRESQL_INCLUDE_DIR)
  SET(POSTGRESQL_FIND_QUIETLY TRUE)
ENDIF (POSTGRESQL_INCLUDE_DIR)

FIND_PATH(POSTGRESQL_INCLUDE_DIR ${TARGET_INCLUDE_SUFFIX}
  /usr/include
  /usr/include/postgresql
  /usr/local/include/postgresql
)

SET(POSTGRESQL_NAMES ${TARGET_OBJECT_SUFFIX})
FIND_LIBRARY(POSTGRESQL_LIBRARY
  NAMES ${POSTGRESQL_NAMES}
  PATHS /usr/lib /usr/local/lib /usr/lib/x86_64-linux-gnu
  PATH_SUFFIXES ${TARGET_OBJECT_SUFFIX}
)

IF (POSTGRESQL_INCLUDE_DIR AND POSTGRESQL_LIBRARY)
  SET(POSTGRESQL_FOUND TRUE)
  SET( POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY} )
ELSE (POSTGRESQL_INCLUDE_DIR AND POSTGRESQL_LIBRARY)
  SET(POSTGRESQL_FOUND FALSE)
  SET(POSTGRESQL_LIBRARIES )
ENDIF (POSTGRESQL_INCLUDE_DIR AND POSTGRESQL_LIBRARY)

IF (POSTGRESQL_FOUND)
  IF (NOT POSTGRESQL_FIND_QUIETLY)
    MESSAGE(STATUS "Found ${TARGET_OBJECT_SUFFIX}: ${POSTGRESQL_LIBRARY}")
	MESSAGE(STATUS "Found Include ${POSTGRESQL_INCLUDE_DIR}")
  ENDIF (NOT POSTGRESQL_FIND_QUIETLY)
ELSE (POSTGRESQL_FOUND)
  IF (POSTGRESQL_FIND_REQUIRED)
    MESSAGE(STATUS "Looked for ${TARGET_OBJECT_SUFFIX} libraries named ${POSTGRESQL_NAMES}.")
    MESSAGE(FATAL_ERROR "Could NOT find ${TARGET_OBJECT_SUFFIX} library")
  ENDIF (POSTGRESQL_FIND_REQUIRED)
ENDIF (POSTGRESQL_FOUND)

MARK_AS_ADVANCED(
  POSTGRESQL_LIBRARY
  POSTGRESQL_INCLUDE_DIR
  )
